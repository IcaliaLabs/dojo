* {
  margin: 0;
  padding: 0;
  font-family: 'Open Sans', sans-serif;
}

ul {
  list-style: none; 
}

ol {
  list-style-position: inside;
}

a {
  color: inherit;
  text-decoration: none;
}

.container {
  width: 85%;
  margin: auto;
}

.menu {
  position: fixed;
  z-index: 10;
  top: 0;
  left: 0;
  width: 100%;
  padding: 20px 0;
  background-color: #e80039;
  color: #fff;
  font-weight: 700;
}

.menu a {
  margin-right: 16px;
}

.banner {
  box-sizing: border-box;
  height: 93vh;
  margin-top: 7vh;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.separation--top {
  display: block;
  margin-top: 16px;
}

.separation--top-m {
  margin-top: 24px;
}

.separation--top-l {
  margin-top: 62px;
}

.dojo {
  display: flex;
  justify-content: space-between;
}

.dojo--info {
  padding-top: 62px;
  font-size: 18px;
  line-height: 1.6;
}


.dojo--card {
  box-sizing: border-box;
  border: 1px solid #ececec; 
  border-radius: 4px;
  background: #f3f3f3;
}

.dojo--card-header {
  text-align: center;
  background: #fff;
  border-bottom: 1px solid #ececec;
  padding: 15px 30px;
}

.dojo--card-body {
  padding: 15px 30px;
}

.dojo--list ol {
  padding-left: 17px;
}

table {
  width: 100%;
  text-align: left;
}

th:not(:first-child),
td:not(:first-child) {
  padding-left: 30px;
}


.text-bold {
  font-weight: 700;
}

.text--color-secondary {
  color: #e80039;
}

.link:hover,
.link:active {
  color: #cc093a;
}

.footer {
  padding: 16px 0;
  background: #0e0d0d;
  color: #fff;
}

.footer--info {
  display: flex;
  justify-content: space-between;
}

.contact--box {
  padding: 32px 0;
  background-image: url(./images/marvin-meyer-SYTO3xs06fU-unsplash.jpg), linear-gradient(#e80039,#e80039); 
  background-repeat: no-repeat;
  background-size: cover;
  color: #fff;
  background-blend-mode: darken;
  filter: contrast(70%);
}

.contact--title {
  font-size: 24px;
}

.input {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
  border: 0;
  border-radius: 6px;
  font-size: 16px;
}

.button {
  padding: 16px 32px;
  border: 0;
  border-radius: 4px;
  background: #0e0d0d;
  color: #fff;
  font-size: 16px;
}

.icon {
  font-size: 40px;
  color: #cc093a;
}

/* THIS IS THE MEDIA QUERY CODE */
/* 
To define a media query you need to use an @media

A media query has three types of operators:
  1. only - only it's an operation that defines that the rule of the media query has to be and
     entire match, and it prevent that old browsers from applying selected styles.
  2. not - The not operator is used to negate a media query, returning true if the query would 
     otherwise return false
  3. and - The and operator is used for combining multiple media features together into a single
     media query

A media query has different kinds of media types:

  1. all - Default use for all devices
  2. print - use for printing purposes
  3. screen - used for computer screens, smartphones and tablets
  4. speech -used for screenreaders

The most frecuenly used are the all and screen type because they're used to modify depending on
the device or a screen.

The basic syntax for a media querys:
 
 @media only screen and (max-width: 320px) { }

 @media - it's the keyword that defined a media query
 only - it's a logical operator that defines that the rule has to apply a style only if
 an entire query matches
 screen - it's the type of media
 followed with the and operation that makes the media query a combined operation
 (min-width: 320px) - gives the ruling that the media query it's going to make the changes in 
 screen devices when the max-widht is 320px;
 {} - write the rules for the changes whitin the brackets 
*/

/* Both of the hide classes were made to hide an element with this classes depending of the size of the screen */
.hide--on-big {
  display: none;
}

.hide--on-small {
  display: block;
}

.toggle { /* this class was made to hide the input that it's being used to activate the menu */
  display: none;
}

.dojo { /* this class is repeated for the pruposes of the lesson, but the rule should be whitin the rule on line 64 */
  flex-wrap: wrap; /* The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. */
}

/* this media query states that the media only of screens that are equal or below 768px in width will be affected by this rules  */
@media only screen and (max-width: 768px) {
  
  /* The first to examples of the changes of the rules, using the media query rewrites the css */
  .hide--on-small{
    display: none;
  }

  .hide--on-big {
    display: block;
  }
  
  /* this css ruel set was used to create a hamburger menu that on click displays the rest of the options  */
  .toggle:checked ~ .menu-big {
    display: block;
    width: 100%;
  }

  .menu {
    font-size: 20px;
  }

  .menu--mobile {
    cursor: pointer; /* The cursor property specifies the mouse cursor to be displayed when pointing over an element. */
  }

  .menu-link {
    display: block;
    text-align: center;
    padding: 30px 0;
    box-sizing: border-box;
  }

  .menu-link:hover {
    background-color: #cc093a;
  }

  .dojo--card {
    margin-top: 20px;
    text-align: center;
    width: 100%;
  }

  table {
    font-size: 13px;
  }

  th:not(:first-child),
  td:not(:first-child) {
    padding-left: 15px;
  }

  .button {
    width: 100%;
  }
 }

 /* It is important to know that for the most part the media querys will be used to style
for a responsive mobile view, but we cannot forget that maybe the design for the website wasn't 
made for big resolution screen, as an Icalier it's important to have this always in our mind */
 /* If the trainee isn't using a big screen to see this rules, the Responsive Design Mode on the inspector option of the browser can be used to make the page larger  */
 /* this media query states that the media only of screens that are equal or higher 2500px in width will be affected by this rules  */
 @media only screen and (min-width: 2500px) {
   body {
     width: 70%;
     margin: auto;
   }

   .container--big {
    width: 70%;
   }
 }