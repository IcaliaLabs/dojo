* {
  margin: 0;
  padding: 0;
  font-family: 'Open Sans', sans-serif;
}

ul {
  list-style: none; 
}

ol {
  list-style-position: inside;
}

a {
  color: inherit;
  text-decoration: none;
}

.container {
  width: 85%;
  margin: auto;
}

/* NESTING */
/* Much like a HTML, SASS have a hierarchy with nesting, saving time and code lines for rules
that work on the same base selector */

.menu {
  position: fixed;
  z-index: 10;
  top: 0;
  left: 0;
  width: 100%;
  padding: 20px 0;
  background-color: $color-primary;
  color: $color-light;
  font-weight: 700;

  a { /* this will read on the css as menu a  */
    margin-right: 16px;
  }
}


.banner {
  box-sizing: border-box;
  height: 93vh;
  margin-top: 7vh;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/* In the case when many clases has the same prefix name, we can use nesting to save time and
write the prefix just one time, to use this nesting the & symbol it's needed to declare the rule */
.separation {
  &--top { /* this will be compiled as separation--top */
    display: block;
    margin-top: $separation;
  }

  &--top-m { /* this will be compiled as separation--top-m */
    margin-top: $separation-m;
  }

  &--top-l { /* this will be compiled as separation--top-l */
    margin-top: $separation-l;
  }
}

.dojo {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;

  &--info {
    padding-top: 62px;
    font-size: 18px;
    line-height: 1.6;
  }
  
  
  &--card {
    box-sizing: border-box;
    border: 1px solid $color-card-border; 
    border-radius: 4px;
    background: $color-card-body;
  }
  
  &--card-header {
    text-align: center;
    background: $color-light;
    border-bottom: 1px solid $color-card-border;
    padding: 15px 30px;
  }
  
  &--card-body {
    padding: 15px 30px;
  }
  
  &--list ol {
    padding-left: 17px;
  }
}


table {
  width: 100%;
  text-align: left;
}

th:not(:first-child),
td:not(:first-child) {
  padding-left: 30px;
}


.text {
  &-bold {
    font-weight: 700;
  }
  
  &--color-secondary {
    color: $color-primary;
  }

} 

.link:hover,
.link:active {
  color: $color-primary-darken;
}

.footer {
  padding: 16px 0;
  background: $color-dark;
  color: $color-light;

  &--info {
    display: flex;
    justify-content: space-between;
  }
}

.contact {
  &--box {
    padding: 32px 0;
    /* another thing you can use with sass is using variables instead of rgba code and use the alpha to decrease the opacity */
    background-image: url(../images/marvin-meyer-SYTO3xs06fU-unsplash.jpg), linear-gradient( rgba($color-primary , 0.8 ) , rgba($color-primary-darken, 0.8));
    background-repeat: no-repeat;
    background-size: cover;
    color: $color-light;
    background-blend-mode: darken;
  }
  
  &--title {
    font-size: 24px;
  }

}

.input {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
  border: 0;
  border-radius: 6px;
  font-size: 16px;
}

.button {
  padding: 16px 32px;
  border: 0;
  border-radius: 4px;
  background: $color-dark;
  color: $color-light;
  font-size: 16px;

  &:hover {
    background:#000;
  }
}

.icon {
  font-size: 40px;
  color: $color-primary-darken;
}

.hide--on {
  &-big {
    display: none;
  }
  
  &-small {
    display: block;
  }

}

.toggle {
  display: none;
}
