/* Introduction to the Cascading Style Sheet (CSS) */

/*
This is how you declare a comment in CSS. Like in programming languages, comments are not 
considered part of the markup and are ignored by any processing entities (browsers, parsers, 
readers). Anything placed between the opening and closing arrows will not appear in your rendered 
HTML. 
*/

/* CSS Syntax */
/*
The way that CSS works it's with rules, a CSS rule-set consists of a selector and a declaration 
block.

The selector it's the first part to make a CSS rule,there are 3 important selectors: html 
elements, classes & ids. To start a rule type a selector and then open brackets inside the 
brackets is wherethe declaration it's made and the when the close the brackets. The declaration 
consists of multiple property and their values.
More info on the css Syntax: https://www.w3schools.com/css/css_syntax.asp
*/

/*
In Icalialabs we prefer to use class selectors instead of element or id selectors.
*/


/*This first Rule it's a reset rule that makes all the elements on the HTML file to have no
margin or padding and sets a font for the website */
* { /* this an all selector. the all selector select all the elements on a html file */
  margin: 0; /* this is a margin property with the value of 0 */  
  padding: 0; /*this is a padding property with the value of 0 */
  font-family: 'Open Sans', sans-serif; /* this a font-family property with the value of a typhography*/
} /* end of rule */

ul { /* this an element selector for the unordered list */
  list-style: none; 
  /* list style property changes the style of the ul or ol the value  none removes any bullet 
  style of the element */
}

a { /* this is a  reset for the a element */ 
  color: inherit; /* color property change the color of text */
                  /* the inherit value gives the rule to take the value from the selector father */
  text-decoration: none; /* text-decoration property pecifies the decoration added to text, and is a shorthand property  */
}

/* this is a class selector, to declare a class selector first you need to  
type a period '.' + 'name' */
/* the class container it's used to create a width for your page and center the page */
.container {
  width: 85%; /* witdth property define a width for the rule the value  on percentage takes the element father as the 100% */
  margin: auto; /* margin property with the auto value to give an equal margin to both sides and thus centering the container */
}

.menu {
  position: fixed; /* position property specifies the type of positioning method used for an element (static, relative, absolute, fixed, or sticky). */
  z-index: 10; /*The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order.*/
              /* value of 10 gives a stack of 10 wich means that a stack of 9 or lower will be below this selector */
  top: 0; /* The top property affects the vertical position of a positioned element. This property has no effect on non-positioned elements. */
  left: 0; /* The left property affects the horizontal position of a positioned element. This property has no effect on non-positioned elements. */
  width: 100%;
  padding: 20px 0;/* padding is the space between its content and its border. */
                  /* this is a value group  witch */
  background-color: #e80039; /* this property sets the background color of an element */
                              /* this value is in hex code #000000 */
  color: #fff;
  font-weight: 700; /* The font-weight property sets how thick or thin characters in text should be displayed. */
}

.menu a { /* this is a more specific selector this means that all the a elements whitin the class menu will be afected by this rule */
  margin-right: 16px; /* margin-right property sets only the right margin of an element. */
}

.banner {
  box-sizing: border-box; /* box-sizing property defines how the width and height of an element are calculated: should they include padding and borders, or not. */
  height: 90vh; /* height property sets the height of an element. */
                /* vh view height it's a unit that is relative to the heigth of the viewport */
  margin-top: 62px; /* text-align property specifies the horizontal alignment of text in an element. */
  text-align: center; /* text-align property specifies the horizontal alignment of text in an element, in this case center horizontally */
}

.banner--info {
  position: relative;
  top: 50%;
  transform: translateY(-50%); /* transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements. */
                              /* more info https://www.w3schools.com/CSSref/css3_pr_transform.asp */
}

.separation--top {
  display: block; /* display property specifies the display behavior (the type of rendering box) of an element */
  margin-top: 16px;
}

.separation--top-m {
  margin-top: 24px;
}

.separation--top-l {
  margin-top: 62px;
}

.dojo--info {
  padding-top: 62px;
  font-size: 18px; /* display property specifies the display behavior (the type of rendering box) of an element. */
  line-height: 1.6; /* line-height property specifies the height of a line */
}

.dojo--list {
  display: inline-block;
  box-sizing: border-box;
  width: 20%;
  height: 200px;
  padding: 30px;
  background: #ececec; /* background property it's the base property to set background color and styling */
  vertical-align: top; /* vertical-align property sets the vertical alignment of an element */
}

.dojo--list ol {
  padding-left: 17px;
}

.dojo--table {
  width: 59%;
}

table {
  width: 100%;
  text-align: left;
}

th:not(:first-child),
td:not(:first-child) { /* this group selectors are together with a coma, this means that both selectors have the same rules */
                       /* this selectors have the pseudo selectors :not(selector) selector matches every element that is NOT the specified element/selector. */
                       /* inside this : not selector there is another pseudo selector of first-childs */
  padding-left: 30px;
}


.text-bold {
  font-weight: 700;
}

.text--color-secondary {
  color: #e80039;
}

.link:hover,
.link:active { /* this two pseudo classes share the same rule and they're used for hover and active states on a link */
  color: #cc093a;
}

.footer {
  padding: 16px 0;
  background: rgb(19, 19, 19);
  color: #fff;
}

.footer--info {
  display: flex; /* The flex property sets the flexible length on flexible items */
  justify-content: space-between; /* justify-content property aligns the flexible container's items when the items do not use all available space on the main-axis (horizontally). */
}

.contact--box {
  padding: 32px 0;
  background-image: url(./images/marvin-meyer-SYTO3xs06fU-unsplash.jpg), linear-gradient(#e80039,#e80039); 
  /* background-image property sets one or more background images for an element */
  /* CSS gradients let you display smooth transitions between two or more specified colors */
  background-repeat: no-repeat; /* background-repeat property sets if/how a background image will be repeated */
  background-size: cover; /* background-size property specifies the size of the background images */
  color: #fff;
  background-blend-mode: darken; /* background-blend-mode property defines the blending mode of each background layer (color and/or image) */
  filter: contrast(70%); /* filter property defines visual effects (like blur and saturation) to an element (often <img>) */
}

.contact--title {
  font-size: 24px;
}

.input {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
  border: 0; /* border propierty helps to define a border of the selector */
  border-radius: 6px; /* border-radius property defines the radius of the element's corners */
  font-size: 16px;
}

.button {
  padding: 16px 32px;
  border: 0;
  border-radius: 4px;
  background: rgb(19, 19, 19);
  color: #fff;
  font-size: 16px;
}
